
/* _/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/

	FILE	: KeyManager.h
    NAME	: Teacher.K

+ ------ Explanation of file --------------------------------------------------------------------------
       
    キー入力の管理を行うクラス

	--- 主な使い方 ---
	プログラム実行時に１つインスタンス化して使用する。（複数作ってもあまり意味がない）
	フレームの発生タイミングで一度updateを呼び出しキー情報の更新を行う。
	キー情報の取得にはgetKeyStateに仮想キーコードまたは文字コード（英数）を渡し、
	戻り値を受け取る事ることで実現できる。
	基本的な使い方としては必要なタイミングでgetKeyStateを呼び出し、
	戻り値を真偽判定することでキー情報での分岐処理が可能である。

	例・Aが押されている場合コンソール画面に出力を行う

	if( インスタンス名.getKeyState( 'A' ) != 0 )
	{
		printf( "Aが押されています" );
	}

+ _/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/ */

// --- クラスの宣言
class KeyManager
{
	// --- 公開変数とメンバ関数
	public:
		KeyManager( );							// --- コンストラクタ
		~KeyManager( );							// --- デストラクタ
		int update( );							// --- キー情報の更新
		BYTE getKeyState( BYTE arg_keyCode );	// --- キー情報の取得

	// --- 非公開変数とメンバ関数
	private:
		BYTE m_bKeyTbl[ 256 ];		// --- キーテーブル
};

